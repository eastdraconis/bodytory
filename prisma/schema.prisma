generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "filteredRelationCount"]
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "./ERD.png"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id            Int             @id @default(autoincrement())
  createAt      DateTime        @default(now())
  updateAt      DateTime        @updatedAt
  password      String
  email         String          @unique
  phone         String?
  name          String
  age           Int
  gender        Gender
  records       Record[]
  hospitals     Hospital[]
  Certification Certification[]
}

model Certification {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  number   String
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
}

model Record {
  id          Int        @id @default(autoincrement())
  createAt    DateTime   @default(now())
  updateAt    DateTime   @updatedAt
  type        RecordType
  position    Position
  disease     String
  description String
  userId      Int
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model MedicalDepartment {
  id         Int    @id
  department String
}

model Hospital {
  id       Int      @id
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  password String   @default("123456")
  name     String
  area     String
  userId   Int?
  phone    String?
  address  String
  user     User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Certification {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime
  number   String
  userId   Int
}

model HospitalToMedicalDepartment {
  A Int
  B Int

  @@unique([A, B], map: "_HospitalToMedicalDepartment_AB_unique")
  @@index([B], map: "_HospitalToMedicalDepartment_B_index")
  @@map("_HospitalToMedicalDepartment")
}

enum Gender {
  male
  female
}

enum Position {
  head
  arm
  leg
}

enum RecordType {
  user
  hospital
}

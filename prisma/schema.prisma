generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filteredRelationCount"]
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "./ERD.png"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createAt  DateTime @default(now())
  email     String
  gender    Gender
  name      String
  password  String
  phone     String?
  updateAt  DateTime @updatedAt
  type      UserType @default(origin)
  birth     String   @default("1993-10-23")
  accountId String   @unique
}

model Certification {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  number   String
  userId   Int?
  email    String?
}

model Record {
  id           Int        @id @default(autoincrement())
  createAt     DateTime   @default(now())
  updateAt     DateTime   @updatedAt
  type         RecordType
  position     Position
  description  String
  userId       Int
  diagnosis    String?
  prescription String?
  hospitalId   Int?
}

model RecordImage {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  recordId Int
  url      String
}

model MedicalDepartment {
  id         Int    @id
  department String
}

model Hospital {
  id       Int      @id @default(autoincrement())
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  password String   @default("123456")
  name     String
  area     String
  address  String
  city     String
  class    String
  homepage String?
  x        Float?
  y        Float?
}

model HospitalMedicalDepartmentConnector {
  id                  Int  @id @default(autoincrement())
  medicalDepartmentId Int?
  hospitalId          Int?
}

model HospitalToUser {
  A Int
  B Int

  @@unique([A, B], map: "_HospitalToUser_AB_unique")
  @@index([B], map: "_HospitalToUser_B_index")
  @@map("_HospitalToUser")
}

model MedicalDepartmentToRecord {
  A Int
  B Int

  @@unique([A, B], map: "_MedicalDepartmentToRecord_AB_unique")
  @@index([B], map: "_MedicalDepartmentToRecord_B_index")
  @@map("_MedicalDepartmentToRecord")
}

enum Gender {
  male
  female
}

enum UserType {
  naver
  kakao
  origin
}

enum Position {
  head
  forehead
  eyes
  nose
  mouth
  cheek
  chin
  ears
  back
  waist
  hip
  neck
  chest
  stomach
  pelvis
  sexOrgan
  shoulder
  upperArm
  albow
  forearm
  wrist
  hand
  thigh
  knee
  calf
  ankle
  foot
}

enum RecordType {
  user
  hospital
}
